service: ${self:custom.common.service}
configValidationMode: ${self:custom.common.configValidationMode}

plugins: ${self:custom.common.plugins}

custom:
  common: ${file(serverless.common.yml)}
  pythonRequirements: ${self:custom.common.pythonRequirements}
  prune: ${self:custom.common.prune}

package: ${self:custom.common.package}

provider:
  name: ${self:custom.common.provider.name}
  runtime: ${self:custom.common.provider.runtime}
  memorySize: ${self:custom.common.provider.memorySize}
  region: ${self:custom.common.provider.region}
  environment:
  httpApi:
    authorizers:
      heartyUserPoolAuthorizer:
        identitySource: $request.header.Authorization
        issuerUrl:
          Fn::Join:
            - ''
            - - 'https://cognito-idp.'
              - '${opt:region, self:provider.region}'
              - '.amazonaws.com/'
              - Ref: heartyUserPool
        audience:
          - Ref: heartyUserPoolClient
  stackPolicy:
    - Effect: Allow
      Principal: '*'
      Action: 'Update:*'
      Resource: '*'
    - Effect: Deny
      Principal: '*'
      Resource: '*'
      Action:
        - Update:Replace
        - Update:Delete
      Condition:
        StringEquals:
          ResourceType:
            - AWS::DynamoDB::Table
            - AWS::Cognito::UserPool
            - AWS::Cognito::UserPoolClient
            - AWS::Cognito::UserPoolDomain

resources:
  Resources:
    HttpApi:
      DependsOn: heartyUserPool
    heartyUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        AccountRecoverySetting:
          RecoveryMechanisms:
            - Name: verified_email
              Priority: 1
        AutoVerifiedAttributes:
          - email
        DeviceConfiguration:
          ChallengeRequiredOnNewDevice: true
          DeviceOnlyRememberedOnUserPrompt: false
        EnabledMfas:
          - SOFTWARE_TOKEN_MFA
        MfaConfiguration: OPTIONAL
        Policies:
          PasswordPolicy:
            MinimumLength: 10
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: true
            RequireUppercase: true
        UsernameAttributes:
          - email
        UsernameConfiguration:
          CaseSensitive: true
        UserPoolAddOns:
          AdvancedSecurityMode: ENFORCED
        UserPoolName: ${self:custom.common.custom.appEnv}-user-pool
    heartyUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:custom.common.custom.appEnv}-user-app
        AllowedOAuthFlows:
          - code
          - implicit
        AllowedOAuthFlowsUserPoolClient: true
        AllowedOAuthScopes:
          - phone
          - email
          - openid
          - profile
          - aws.cognito.signin.user.admin
        UserPoolId:
          Ref: heartyUserPool
        CallbackURLs:
          - https://localhost:3000
        ExplicitAuthFlows:
          - ALLOW_USER_SRP_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        GenerateSecret: false
        SupportedIdentityProviders:
          - COGNITO
    heartyeUserPoolDomain:
      Type: AWS::Cognito::UserPoolDomain
      Properties:
        UserPoolId:
          Ref: heartyUserPool
        Domain: ${self:custom.common.custom.appEnv}
    secretsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.common.custom.appEnv}-secrets
        BillingMode: PAY_PER_REQUEST
        SSESpecification:
          SSEEnabled: true
        AttributeDefinitions:
          - AttributeName: app_name
            AttributeType: S
        KeySchema:
          - AttributeName: app_name
            KeyType: HASH
    ## Oura Data tables ##
    ouraUserAuthTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.common.custom.appEnv}-OuraUserAuth
        BillingMode: PAY_PER_REQUEST
        SSESpecification:
          SSEEnabled: true
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
    ouraUserInfoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.common.custom.appEnv}-OuraUserInfo
        BillingMode: PAY_PER_REQUEST
        SSESpecification:
          SSEEnabled: true
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
    ouraReadinessTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.common.custom.appEnv}-OuraReadiness
        BillingMode: PAY_PER_REQUEST
        SSESpecification:
          SSEEnabled: true
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: summary_date
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: summary_date
            KeyType: RANGE
    ouraSleepTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.common.custom.appEnv}-OuraSleep
        BillingMode: PAY_PER_REQUEST
        SSESpecification:
          SSEEnabled: true
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: summary_date
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: summary_date
            KeyType: RANGE
    ouraActivityTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.common.custom.appEnv}-OuraActivity
        BillingMode: PAY_PER_REQUEST
        SSESpecification:
          SSEEnabled: true
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: summary_date
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: summary_date
            KeyType: RANGE
    ouraBedtimeTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.common.custom.appEnv}-OuraBedtime
        BillingMode: PAY_PER_REQUEST
        SSESpecification:
          SSEEnabled: true
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: date
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: date
            KeyType: RANGE
    ## Apple HealthKit Tables ##
    healthKitHeartRateTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.common.custom.appEnv}-HealthKitHeartRate
        BillingMode: PAY_PER_REQUEST
        SSESpecification:
          SSEEnabled: true
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: start_epoch_seconds
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: start_epoch_seconds
            KeyType: N
    healthKitStepsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.common.custom.appEnv}-healthKitSteps
        BillingMode: PAY_PER_REQUEST
        SSESpecification:
          SSEEnabled: true
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: start_epoch_seconds
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: start_epoch_seconds
            KeyType: N

functions:
  echo:
    handler: hearty.api.lambdas.echo.echo
    events:
      - httpApi:
          authorizer: heartyUserPoolAuthorizer
          path: /echo
          method: post

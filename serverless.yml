service: ${self:custom.common.service}
configValidationMode: ${self:custom.common.configValidationMode}

plugins: ${self:custom.common.plugins}

custom:
  common: ${file(serverless.common.yml)}
  pythonRequirements: ${self:custom.common.pythonRequirements}
  prune: ${self:custom.common.prune}
  congitoIssuerHost:
    Fn::Join:
      - ''
      - - 'https://cognito-idp.'
        - '${opt:region, self:provider.region}'
        - '.amazonaws.com/'

package: ${self:custom.common.package}

provider:
  name: ${self:custom.common.provider.name}
  runtime: ${self:custom.common.provider.runtime}
  memorySize: ${self:custom.common.provider.memorySize}
  region: ${self:custom.common.provider.region}
  environment:
  httpApi:
    authorizers:
      heartyUserPoolAuthorizer:
        identitySource: $request.header.Authorization
        issuerUrl:
          Fn::Join:
            - ''
            - - 'https://cognito-idp.'
              - '${opt:region, self:provider.region}'
              - '.amazonaws.com/'
              - Ref: heartyUserPool
        audience:
          - Ref: heartyUserPoolClient
  stackPolicy:
    - Effect: Allow
      Principal: '*'
      Action: 'Update:*'
      Resource: '*'
    - Effect: Deny
      Principal: '*'
      Resource: '*'
      Action:
        - Update:Replace
        - Update:Delete
      Condition:
        StringEquals:
          ResourceType:
            - AWS::DynamoDB::Table
            - AWS::Cognito::UserPool
            - AWS::Cognito::UserPoolClient
            - AWS::Cognito::UserPoolDomain

      ## Internal Admin User Cognito Objects ##

functions:

service: ${self:custom.common.service}-admin
configValidationMode: ${self:custom.common.configValidationMode}

plugins: ${self:custom.common.plugins}

custom:
  common: ${file(serverless.common.yml)}
  pythonRequirements: ${self:custom.common.pythonRequirements}
  prune: ${self:custom.common.prune}
  doc_directory: "doc/api/admin"
  documentation: ${file(${self:custom.doc_directory}/documentation.yml):documentation}

package: ${self:custom.common.package}

provider:
  name: ${self:custom.common.provider.name}
  runtime: ${self:custom.common.provider.runtime}
  memorySize: ${self:custom.common.provider.memorySize}
  region: ${self:custom.common.provider.region}
  timeout: ${self:custom.common.provider.timeout}
  httpApi:
    authorizers:
      heartyAdminPoolAuthorizer:
        identitySource: $request.header.Authorization
        issuerUrl:
          Fn::Join:
            - ''
            - - 'https://cognito-idp.'
              - '${opt:region, self:provider.region}'
              - '.amazonaws.com/'
              - Ref: heartyAdminPool
        audience:
          - Ref: heartyAdminPoolClient
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
          Resource: arn:aws:dynamodb:${self:custom.common.provider.region}:*:table/${self:custom.common.custom.appEnv}*

resources:
  Resources:
    HttpApi:
      DependsOn: heartyAdminPool
    heartyAdminPool:
      Type: AWS::Cognito::UserPool
      Properties:
        AccountRecoverySetting:
          RecoveryMechanisms:
            - Name: verified_email
              Priority: 1
        AutoVerifiedAttributes:
          - email
        DeviceConfiguration:
          ChallengeRequiredOnNewDevice: true
          DeviceOnlyRememberedOnUserPrompt: false
        EnabledMfas:
          - SOFTWARE_TOKEN_MFA
        MfaConfiguration: OPTIONAL
        Policies:
          PasswordPolicy:
            MinimumLength: 10
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: true
            RequireUppercase: true
        UsernameAttributes:
          - email
        UsernameConfiguration:
          CaseSensitive: true
        UserPoolAddOns:
          AdvancedSecurityMode: ENFORCED
        UserPoolName: ${self:custom.common.custom.appEnv}-admin-pool
    heartyAdminPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:custom.common.custom.appEnv}-admin-app
        AllowedOAuthFlows:
          - code
        AllowedOAuthFlowsUserPoolClient: true
        AllowedOAuthScopes:
          - phone
          - email
          - openid
          - profile
          - aws.cognito.signin.user.admin
        UserPoolId:
          Ref: heartyAdminPool
        CallbackURLs:
          - https://localhost:3000
        ExplicitAuthFlows:
          - ALLOW_USER_SRP_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        GenerateSecret: false
        SupportedIdentityProviders:
          - COGNITO
    heartyeAdminPoolDomain:
      Type: AWS::Cognito::UserPoolDomain
      Properties:
        UserPoolId:
          Ref: heartyAdminPool
        Domain: ${self:custom.common.custom.appEnv}-admin

functions:
  echo:
    handler: hearty.api.lambdas.echo.echo
    events:
      - httpApi:
          authorizer: heartyAdminPoolAuthorizer
          path: /echo
          method: post
  healthkit-get-heartrates:
    handler: hearty.api.admin.lambdas.healthkit.get_heart_rates
    events:
      - httpApi:
          authorizer: heartyAdminPoolAuthorizer
          path: /client/healthkit/heart-rates/{userId}
          method: get
          documentation: ${file(${self:custom.doc_directory}/endpoints.yml):healthkit-get-heartrates}
